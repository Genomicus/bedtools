#summary Examples of common usage.
#labels Featured

<wiki:toc>

<br>
<br>
<br>


=intersectBed=

*Note*:  _When intersecting SNPs, make sure the coordinate conform to the UCSC format.  That is,
the start position for each SNP should be SNP position - 1 and the end position should
be SNP position_.  
E.g. chr7  10000001        10000002        rs123464
                
  *. Report the base-pair overlap between sequence alignments and genes.
  {{{$ intersectBed -a reads.bed -b genes.bed}}}
  *. Report whether each alignment overlaps one or more genes.  If not, the alignment is not reported.
  {{{$ intersectBed -a reads.bed -b genes.bed -u}}}
  *. Report those alignments that overlap NO genes.  Like "grep -v"
  {{{$ intersectBed -a reads.bed -b genes.bed -v}}}
  *. Report the number of genes that each alignment overlaps.
  {{{$ intersectBed -a reads.bed -b genes.bed -c}}}
  *. Report the entire, original alignment entry for each overlap with a gene.
  {{{$ intersectBed -a reads.bed -b genes.bed -wa}}}
  *. Report the entire, original gene entry for each overlap with a gene.
  {{{$ intersectBed -a reads.bed -b genes.bed -wb}}}
  *. Report the entire, original alignment and gene entries for each overlap.
  {{{$ intersectBed -a reads.bed -b genes.bed –wa -wb}}}
  *. Only report an overlap with a repeat if it spans at least 50% of the exon.
  {{{$ intersectBed -a exons.bed -b repeatMasker.bed –f 0.50}}}
  *. Only report an overlap if comprises 50% of the structural variant and 50% of the segmental duplication.  Thus, it is reciprocally at least a 50% overlap.
  {{{$ intersectBed -a SV.bed -b segmentalDups.bed –f 0.50 -r}}}                        
  *. Read BED A from stdin.  For example, find genes that overlap LINEs but not SINEs.
  {{{$ intersectBed -a genes.bed -b LINES.bed | intersectBed -a stdin -b SINEs.bed -v}}}
  *. Retain only single-end BAM alignments that overlap exons. 
  {{{$ intersectBed -abam reads.bam -b exons.bed > reads.touchingExons.bam}}}
  *. Retain only single-end BAM alignments that do not overlap simple sequence repeats. 
  {{{$ intersectBed -abam reads.bam -b SSRs.bed -v > reads.noSSRs.bam}}}
  *. Retain only paired-end BAM alignments where neither end overlaps simple sequence repeats.


<br><br>


=pairToBed=
 
  *. Return all structural variants (in BEDPE format) that overlap with genes on either end. 
  {{{$ pairToBed -a sv.bedpe -b genes > sv.genes}}}
  *. Return all structural variants (in BEDPE format) that overlap with genes on both end. 
  {{{$ pairToBed -a sv.bedpe -b genes -type both > sv.genes}}}
  *. Retain only paired-end BAM alignments where neither end overlaps simple sequence repeats. 
  {{{$ pairToBed -abam reads.bam -b SSRs.bed -type neither > reads.noSSRs.bam}}}
  *. Retain only paired-end BAM alignments where both ends overlap segmental duplications. 
  {{{$ pairToBed -abam reads.bam -b segdups.bed -type both > reads.SSRs.bam}}}
  *. Retain only paired-end BAM alignments where neither or one and only one end overlaps segmental duplications. 
  {{{$ pairToBed -abam reads.bam -b segdups.bed -type notboth > reads.notbothSSRs.bam}}}



<br><br>



=pairToPair= 

  *. Find all SVs (in BEDPE format) in sample 1 that are also in sample 2. 
  {{{$ pairToPair -a 1.sv.bedpe -b 2.sv.bedpe | cut -f 1-10 > 1.sv.in2.bedpe}}}

  *. Find all SVs (in BEDPE format) in sample 1 that are not in sample 2. 
  {{{pairToPair -a 1.sv.bedpe -b 2.sv.bedpe -type neither | cut -f 1-10 > 1.sv.notin2.bedpe}}}



<br><br>



=bamToBed=
  *. Convert BAM alignments to BED format.
  {{{$ bamToBed -i reads.bam > reads.bed}}}
  *. Convert BAM alignments to BED format using edit distance (NM) as the BED “score”. 
  {{{$ bamToBed -i reads.bam -ed > reads.bed}}}
  *. Convert BAM alignments to BEDPE format. 
  {{{$ bamToBed -i reads.bam -bedpe > reads.bedpe}}}



<br><br>



=windowBed=
        
  *. Report all genes that are within 10000 bp upstream or downstream of CNVs.
  {{{$ windowBed -a CNVs.bed -b genes.bed -w 10000}}}
                        
  *. Report all genes that are within 10000 bp upstream or 5000 bp downstream of CNVs.
  {{{$ windowBed -a CNVs.bed -b genes.bed –l 10000 –r 5000}}}
                        
  *. Report all SNPs that are within 5000 bp upstream or 1000 bp downstream of genes. Define upstream and downstream based on strand.
  {{{$ windowBed -a genes.bed –b snps.bed –l 5000 –r 1000 -sw}}}



<br><br>



=closestBed=

*Note:* _By default, if there is a tie for closest, all ties will be reported. closestBed allows overlapping features to be the closest._
        
  *. Find the closest ALU to each gene.
  {{{$ closestBed -a genes.bed -b ALUs.bed}}} 

  *. Find the closest ALU to each gene, choosing the first ALU in the file if there is a tie.
  {{{$ closestBed -a genes.bed -b ALUs.bed –t first}}}

  *. Find the closest ALU to each gene, choosing the last ALU in the file if there is a tie.
  {{{$ closestBed -a genes.bed -b ALUs.bed –t last}}}



<br><br>



=subtractBed=

*Note:* _If a feature in A is entirely "spanned" by any feature in B, it will not be reported._

  *. Remove introns from gene features.  Exons will (should) be reported.
  {{{$ subtractBed -a genes.bed -b introns.bed}}}



<br><br>



=mergeBed=

  *. Merge overlapping repetitive elements into a single entry.
  {{{$ mergeBed -i repeatMasker.bed}}}

  *. Merge overlapping repetitive elements into a single entry, returning the number of entries merged.
  {{{$ mergeBed -i repeatMasker.bed -n}}}
                        
  *. Merge nearby (within 1000 bp) repetitive elements into a single entry.
  {{{$ mergeBed -i repeatMasker.bed -d 1000}}}



<br><br>



=coverageBed=

  * Compute the coverage of aligned sequences on 10 kilobase “windows” spanning the genome. 
  {{{$ coverageBed -a reads.bed -b windows10kb.bed | head}}}
        
  * Compute the coverage of aligned sequences on 10 kilobase “windows” spanning the genome and created a BEDGRAPH of the number of aligned reads in each window for display on the UCSC browser.
  {{{$ coverageBed -a reads.bed -b windows10kb.bed | cut –f 1-4 > windows10kb.cov.bedg}}} 
  * Compute the coverage of aligned sequences on 10 kilobase “windows” spanning the genome and created a BEDGRAPH of the fraction of each window covered by at least one aligned read for display on the UCSC browser.
  {{{$ coverageBed -a reads.bed -b windows10kb.bed | awk ‘{OFS=”\t”; print $1,$2,$3,$6}’ > windows10kb.pctcov.bedg}}}
        
        
<br><br>


                        
=complementBed=

  * Report all intervals in the human genome that are not covered by repetitive elements.
  {{{$ complementBed -i repeatMasker.bed -g hg18.genome}}}


<br><br>



=shuffleBed=

  * Randomly place all discovered variants in the genome.  However, prevent them from being placed in know genome gaps.
  {{{$ shuffleBed -i variants.bed -g hg18.genome -excl genome_gaps.bed}}}


  * Randomly place all discovered variants in the genome.  However, prevent them from being placed in know genome gaps and require that the variants be randomly placed on the same chromosome.
  {{{$ shuffleBed -i variants.bed -g hg18.genome -excl genome_gaps.bed -chrom}}}